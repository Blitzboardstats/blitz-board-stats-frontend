
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ylpwfpnwxatskgihscff.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlscHdmcG53eGF0c2tnaWhzY2ZmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc5NTEyMTQsImV4cCI6MjA2MzUyNzIxNH0.R5IdqvQs2FVprokTeMbKnQhAf0hZvOxU-oaqlW8T1-A";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: typeof window !== 'undefined' ? window.localStorage : undefined,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce',
    // Clear storage on invalid session
    storageKey: 'supabase.auth.token',
    debug: false
  }
});

// Helper function to clear stale sessions
export const clearStaleSession = async () => {
  try {
    console.log('Clearing stale session data');
    if (typeof window !== 'undefined') {
      // Clear all auth-related localStorage items
      const keysToRemove = [];
      for (let i = 0; i < localStorage.length; i++) {
        const key = localStorage.key(i);
        if (key && key.startsWith('supabase.auth')) {
          keysToRemove.push(key);
        }
      }
      keysToRemove.forEach(key => localStorage.removeItem(key));
    }
  } catch (error) {
    console.warn('Error clearing stale session:', error);
  }
};
